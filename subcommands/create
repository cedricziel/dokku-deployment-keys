#!/usr/bin/env bash
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/config"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")/functions"

create-cmd() {
  #E create a pair of app-specific deployment keys
  #E dokku $PLUGIN_COMMAND_PREFIX:create my-app
  #A app, app to run command against
  declare desc="create a pair of app-specific deployment keys"
  local cmd="$PLUGIN_COMMAND_PREFIX:create" argv=("$@")
  [[ ${argv[0]} == "$cmd" ]] && shift 1
  declare APP="$1"
  APP=${APP:="$DOKKU_APP_NAME"}

  [[ -z "$APP" ]] && dokku_log_fail "Please specify an app to run the command on"
  verify_app_name "$APP"

  fn-deployment-keys-app-has-keys "$APP"
  fn-deployment-keys-create-private-key-folder "$APP"

  local app_specific_key_folder="$DOKKU_ROOT/.deployment-keys/$APP/.ssh"
  ssh-keygen -q -t rsa -b 2048 -f "$app_specific_key_folder/id_rsa" -N ""
  chown -R dokku:dokku "$DOKKU_ROOT/.deployment-keys"
  dokku_log_info1 "Keys created"
  public_key="$(cat "$app_specific_key_folder/id_rsa.pub")"
  dokku_log_verbose "$public_key"
  dokku_log_verbose "The key will be baked into the container on next push/rebuild"
}

create-cmd "$@"
